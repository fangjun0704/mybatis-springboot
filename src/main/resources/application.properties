##指定数据源（springboot2.1.4.RELEASE 默认使用数据源：class com.zaxxer.hikari.HikariDataSource）
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.druid.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&useSSL=false
##springboot的版本不同：driver不同 com.mysql.jdbc.Driver
#spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.druid.username=root
#spring.datasource.druid.password=root
##spring.datasource.druid.schema=classpath:t_user.sql  建表语句
#
######以下这些配置报黄，是因为这些配置不在 DataSourceProperties 类中
######所以需要自己定义一个configure。（项目中的 DruidConfig 类）
##初始化时建立物理连接的个数 默认0
#spring.datasource.druid.initialSize=5
##最小连接池数量 默认0
#spring.datasource.druid.minIdle=5
##最大连接池数量 默认8
#spring.datasource.druid.maxActive=5
##获取连接时最大等待时间，单位毫秒 默认-1
#spring.datasource.druid.maxWait=20
##间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 默认60000
#spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
##连接在池中最小生存的时间 默认1800000
#spring.datasource.druid.minEvictableIdleTimeMillis=300000
##用来检测连接是否有效的sql，要求是一个查询语句.如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
#spring.datasource.druid.validationQuery=SELECT 1 FROM DRUID
#spring.datasource.druid.testWhileIdle=true
##申请连接时执行validationQuery检测连接是否有效
#spring.datasource.druid.testOnBorrow=false
##归还连接时执行validationQuery检测连接是否有效
#spring.datasource.druid.testOnReturn=false
##是否缓存preparedStatement，也就是PSCache
#spring.datasource.druid.poolPreparedStatements=false
##属性类型是字符串，通过别名的方式配置扩展插件.监控统计用的filter:stat
#spring.datasource.druid.filters=stat
##默认10
#spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
#
##mybatis
##开启驼峰规则（mybatis默认不开启）将实体类中的 testField 对应数据库表中的 test_field
#mybatis.configuration.map-underscore-to-camel-case=true

###数据源1
spring.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.db1.username=root
spring.datasource.db1.password=root
spring.datasource.db1.jdbc-url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&useSSL=false
##
###数据源2
spring.datasource.db2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.db2.username=root
spring.datasource.db2.password=root
spring.datasource.db2.jdbc-url=jdbc:mysql://localhost:3306/test2?useUnicode=true&characterEncoding=UTF-8&useSSL=false